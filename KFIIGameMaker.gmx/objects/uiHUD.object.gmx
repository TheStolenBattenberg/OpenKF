<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>uiParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom Draw
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Status Area

UIDrawPanel(conUI.uiW1P * 2, conUI.uiH1P * 2, conUI.uiW1P * 18, conUI.uiH1P * 15, 16 * conUI.uiScale);

UIDrawTextScale(conUI.uiW1P * 3, conUI.uiH1P * 2.6, "HP ~ " + "050", c_white, false, false, 1.5 * conUI.uiScale);
UIStatusBarDraw(uiSBStamina, conUI.uiW1P * 3, conUI.uiH1P * 7.6, conUI.uiW1P*15.8, conUI.uiH1P);

UIDrawTextScale(conUI.uiW1P * 3, conUI.uiH1P * 8.5, "MP ~ " + "030", c_white, false, false, 1.5 * conUI.uiScale);
UIStatusBarDraw(uiSBFocus, conUI.uiW1P * 3, conUI.uiH1P * 13.8, conUI.uiW1P*15.8, conUI.uiH1P);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Screen Messages

if(messageState != MessageState.Waiting)
{
    draw_set_alpha(messageAlpha);
    UIDrawTextScale(conUI.uiW1P * 50, conUI.uiH1P * 94, messageCurrent, $98c8d8, fa_center, fa_center, 2 * conUI.uiScale);
    draw_set_alpha(1.0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom Step
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Screen Messages...

switch(messageState)
{
    //Wait for a message to be added to the queue...
    case MessageState.Waiting:
    
    //Always make sure current message is nothing, and alpha is nothing...
    messageCurrent = "";
    messageAlpha   = 0.0;
    
    if(!ds_queue_empty(conUI.messageQueue))
    {
        messageCurrent = ds_queue_dequeue(conUI.messageQueue);
        messageState = MessageState.FadeIn;
        messageTimer = 0.0;
    }    
    break;
    
    case MessageState.Display:
        messageTimer += (1/60) * global.DT;
        
        if(messageTimer &gt; 1.0)
        {
            messageState = MessageState.FadeOut;
            messageTimer = 0.0;
        }    
    break;
    
    case MessageState.FadeIn:
    
        messageTimer += (1/60) * global.DT;;               
        messageAlpha = smoothstep(0, 1, messageTimer);  
             
        if(messageTimer &gt;= 1.0)
        {
            messageState = MessageState.Display;
            messageTimer = 0.0;
        }
    break;
    
    case MessageState.FadeOut:
        messageTimer += (1/60) * global.DT;;               
        messageAlpha = smoothstep(1, 0, messageTimer);  
             
        if(messageTimer &gt;= 1.0)
        {
            messageState = MessageState.Waiting;
        }   
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UI 'inherited' data

stopDraw = true;    //Stop conUI drawing further back in UI stack than this.
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom Create
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Messages

enum MessageState
{
    Waiting,
    Display,
    FadeIn,
    FadeOut
}

messageTimer = 0.0;
messageState = MessageState.Waiting;
messageCurrent = "";
messageAlpha   = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Status Area

uiSBStamina = UIStatusBar($26A7FF);
uiSBFocus   = UIStatusBar($65CC9C);

UIStatusBarSetPercentFilled(uiSBStamina, 100);
UIStatusBarSetPercentFilled(uiSBFocus, 100);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
