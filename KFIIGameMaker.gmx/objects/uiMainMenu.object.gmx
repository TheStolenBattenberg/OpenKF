<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>uiParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enqueue more music

MusicQueueAdd("SEQ10.ogg", true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom Draw

//Draw BG
var bgScaleW = 0
if(conMain.GameConfig[? "renderWidth"] &gt; conMain.GameConfig[? "renderHeight"])
{
    var off = (conMain.GameConfig[? "renderWidth"]/2) - (conMain.GameConfig[? "renderHeight"]/2);
    bgScaleW = conMain.GameConfig[? "renderHeight"];
    draw_background_stretched(titleBG[4], off, 0, conMain.GameConfig[? "renderHeight"], conMain.GameConfig[? "renderHeight"]);
}else{
    var off = (conMain.GameConfig[? "renderHeight"]/2) - (conMain.GameConfig[? "renderWidth"]/2);
    bgScaleW = conMain.GameConfig[? "renderWidth"];
    draw_background_stretched(titleBG[4], 0, off, conMain.GameConfig[? "renderWidth"], conMain.GameConfig[? "renderWidth"]);
}

//Draw Title
var ttS = bgScaleW / (background_get_width(titleTL[4]) + background_get_width(titleTR[4]));
var ttCX = conMain.GameConfig[? "renderWidth"] / 2;
var ttCY = conMain.GameConfig[? "renderHeight"] / 4;

shader_set(shdBlackIsAlpha);
    draw_background_ext(titleTL[4], ttCX - (background_get_width(titleTL[4]) * ttS), ttCY, ttS, ttS, 0, c_white, 1.0);
    draw_background_ext(titleTR[4], ttCX, ttCY-1, ttS, ttS, 0, c_white, 1.0);
shader_reset();

//Draw Options
ListTextDraw(listText1, ttCX, conUI.uiH1P*70, true, true);

switch(fadeState)
{
    case MenuFadeState.FadeIn:
        draw_set_colour(c_white);
        draw_set_alpha(clamp(cos(pi * fadeTimer), 0, 1));
        draw_rectangle(0, 0, conMain.GameConfig[? "renderWidth"], conMain.GameConfig[? "renderHeight"], false);
        
        draw_set_alpha(1.0);
    break;
    
    case MenuFadeState.FadeOut:
        draw_set_colour(c_black);
        draw_set_alpha(fadeTimer);
        
        draw_rectangle(0, 0, conMain.GameConfig[? "renderWidth"], conMain.GameConfig[? "renderHeight"], false);
        
        draw_set_alpha(1.0);    
    break;
}




//UIDrawTaggedText(conUI.uiW1P * 50, conUI.uiH1P * 50, "What is the reason of \c00FFFFLife\cFFFFFF?\nIs it to die as a man, or as a child...\nBob Ross = \cF1D649\$", "SMELLS LIKE CHEESE!!!");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom Step

switch(fadeState)
{
    case MenuFadeState.FadeIn:
        fadeTimer += (1 / room_speed) * 1.0;
        
        if(fadeTimer &gt;= 1.0)
        {
            fadeState = MenuFadeState.None;
            fadeTimer = 0.0;
        }
    break;
    
    case MenuFadeState.FadeOut:
        if(fadeTimer &lt; 1.0)
        {
            //Increment Fade Timer
            fadeTimer += (1 / room_speed) * 1.0;
        }else
        {
            //Load Gameplay
            if(ListTextGetSelected(listText1) == 0)
            {
                GameStateSet(GameState.NewGame);
                UIDestroy(self);
            }else
            if(ListTextGetSelected(listText1) == 3)
            {
                game_end();
            }
        }
    break;
    
    case MenuFadeState.None:
        if(ListTextGetState(listText1) == true)
        {            
            fadeState = MenuFadeState.FadeOut;
        }
        
        ListTextUpdate(listText1);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UI 'inherited' data

stopDraw = true;    //Stop conUI drawing further back in UI stack than this.
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom Create

titleTL = FileSystemLoadTIM("OP_0", "Title");
titleTR = FileSystemLoadTIM("OP_1", "Title");
titleBG = FileSystemLoadTIM("OP_2", "Title");

MusicQueueAdd("SEQ11.ogg", false);

alarm[0] = room_speed * 34;


enum MenuFadeState
{
    FadeIn,
    None,
    FadeOut,
}

fadeState = MenuFadeState.FadeIn;
fadeTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Widgets

listText1 = ListTextCreate();
ListTextAdd(listText1, LanguageGetString("uiText", 0));
ListTextAdd(listText1, LanguageGetString("uiText", 1));
ListTextAdd(listText1, LanguageGetString("uiText", 2));
ListTextAdd(listText1, LanguageGetString("uiText", 3));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
