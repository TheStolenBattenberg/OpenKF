<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>uiParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clear UI Data
ds_list_clear(textData);
ds_list_destroy(textData);

if(surface_exists(drawSurf))
    surface_free(drawSurf);
    
    
GameStateSet(GameState.Playing);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom Draw

//Make sure surface exists
if(!surface_exists(drawSurf))
    drawSurf = surface_create(conMain.GameConfig[? "renderWidth"], conMain.GameConfig[? "renderHeight"]);
    
//Draw text to surface
surface_set_target(drawSurf);
    //Slight black background
    draw_clear_alpha(c_black, 0.5);
    
    //Draw Text
    draw_set_halign(fa_center);
    UIDrawTaggedText(conUI.uiW1P * 50, conUI.uiH1P * 50, textLine);
    draw_set_halign(fa_left);
    
surface_reset_target();

//Draw actual surface
draw_surface_ext(drawSurf, 0, 0, 1, 1, 0, c_white, smoothstep(0, 1, textTimer));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom Step

//Load First Message
if(currLine == 0)
{
    textLine = textData[| currLine];
    currLine++;
}

//Load a new message, if one exists
if(InputManagerGetPressed(InputMap.Activate) &amp;&amp; textMode == 3)
{
    textMode = 1;
}

//Exit out
if(InputManagerGetAnyPressed(InputMap.Activate) &amp;&amp; textMode == 3)
{
    currLine = ds_list_size(textData);  //Ehehehehehee, haxs
    textMode = 1;
}

//Handle States
switch(textMode)
{
    case 0: //Fade In
        textTimer += (1/60) * global.DT;
        if(textTimer &gt;= 1.0)
        {
            textMode = 3;
        }
    break;
    
    case 1: //Fade Out
        textTimer -= (1/60) * global.DT;
        if(textTimer &lt;= 0)
        {
            textMode = 2;
        }    
    break;
    
    case 2:
        //MOAR LINESSSSS UGH OMG
        if(currLine &lt; ds_list_size(textData))
        {
            textLine = textData[| currLine];
            currLine++;
            
            textMode = 1;
        }else{
            //Destroy self. No more lines.
            UIDestroy(self);
        }    
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UI 'inherited' data

stopDraw = true;    //Stop conUI drawing further back in UI stack than this.
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom Create

textData = ds_list_create();
textLine = null;
currLine = 0;

//Effect and data dependant
textNum   = 0;
textTimer = 0;

textMode  = 0;  //0 = Fade in, 1 = Fade Out, 2 = wait

//Surface for effect
drawSurf = surface_create(conMain.GameConfig[? "renderWidth"], conMain.GameConfig[? "renderHeight"]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
